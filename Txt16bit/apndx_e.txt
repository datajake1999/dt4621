                                 
                              APPENDIX E
                         APPLICATION DICTIONARY.
                                   
     DECtalk PC has memory allocated for a loadable dictionary. This
dictionary is useful in cases where (a) DECtalk makes an error in
pronounciation, or (b) the pronunciation of a string is unique to the
application.  For example, if the sequence n/cl should be pronounced
as "not cleared", then a user dictionary entry is obviously needed.

     To create and load a dictionary to DECtalk PC, you must do the
following:

     1. Create a dictionary table file using a text editor. The
     dictionary must be in the following format:

          (a) An entry must start at the first character of the line.
          Any space or illegal character as the first character of the
          line causes the line to be treated as a comment and it will
          therefore not be processed.

          (b) The syntax is:
               string to be pronounced  [phonemic substitution]
          Each line may be up to 256 characters long.

          (c) A grapheme (letter) string is comprised of legal
          graphemes. Legal graphemes are:
          
                    The letters A-Z and a-z,  the numbers 0-9 and
               select punctuation marks such as ", !, @, &, (, ), -,
          \,  and /.
          
                    NOTE: The punctuation mark characters may not be
          used at the beginning of the grapheme string.
          
               The grapheme string may be in either upper or lower
          case.
               Uppercase letters match only upper case; lowercase
          letters match either uppercase or lowercase.
          
          (d) The phoneme string is comprised of legal phonemes as
          listed in Appendix A, "Multi-character Phonemic Alphabet".

               Phonemes are always in square brackets but may be in
          either upper or lower case.
          
               For example,  to make the word "coffee" be pronounced
          as "tea", you would enter the following:
          
                    coffee    [t'iy]
          
          2. After creating your dictionary table file, you can
          compile into a dictionary file by doing the following:
          
               (a). Compile the dictionary by typing a command in the
               following format:
     
          userdic   input dictionary table   output dictionary file
     
          Input files have the default extension of .tab any extension
     can be used.

          Output dictionary files have the extension of .dtu and must
     have that extension for the loader to find the file correctly. If
     no output file is specified, a file with the same name and .dtu
     extension will be created for the output.
     
          For example: if your dictionary table is called mydict.tab,
     type:
               userdic   mydict

     In this case, the input dictionary table file mydict.tab would be
     compiled into a new output dictionary file called mydict.dtu.
     
          3. Load the user dictionary by switching to the DECtalk file
     subdirectory and typing:
     
               dt_load   output file.dtu
     
          For example, you would type:
     
               dt_load   mydict.dtu
     
          Your customized dictionary is now loaded and ready for use.
     
          Note: User dictionary lookups are done after suffix
     stripping occurs. Therefore, inflected and derived forms should
     also be pronounced according to the dictionary entry.
     
               Note: The User dictionary can not be loaded onto the
     board more than once without first restarting either the DECtalk
     PC or rebooting the machine.
     
          Warning: If your PC is powered down, you must reload the
     user dictionary at power-up. To have a user dictionary loaded
     each time the PC is powered up, the compiled file name should be
     added to the end of the DT_LOAD command string in the
     AUTOEXEC.BAT file.


