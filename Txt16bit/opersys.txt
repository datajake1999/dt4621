	Kerne_share is a large global data struc visible to all
	objects. It is declared in kernel.

	       	signal_semaphore 
		wait_semaphore
		create_process
		read_pipe
		write_pipe
		default_lang library routine not sys dependent
		printf
		logitem	     printf dependent
		dologpho     printf dependent
		save_index   library routine not sys dependent
		adjust_index library routine not sys dependent
		set_index    library routine not sys dependent
	       	signal_semaphore 
		wait_semaphore
		send_index
		getc
		vol_up		system hardware dependent
		flush_done	
		vol_down	system hardware dependent
		sleep
		vol_set		system hardware dependent
		module_clock	system hardware dependent
		put_seq
		kernel_enable
		status_clear
		clr_gpio	system hardware dependent
		set_gpio	system hardware dependent


		/* below are dependent on delivery mechanism of
		spc packets to the signal processing chip*/

		spcget	  gets spc packets
		spc_write write spc packets
		reset_spc
	
	The USA files use the following system services and/or 
	system library calls.

		create_process
		read_pipe
		write_pipe
		default_lang 
		printf
		logitem	     
		dologpho     
		save_index   
		adjust_index 
		set_index    
		spcget	  
		spc_write 
	
	The CMD files use the following system services and/or 
	system library calls.

		create_process
		read_pipe
		write_pipe
		default_lang 
		printf
		logitem	     
		dologpho     
		save_index   
		adjust_index 
		set_index    
		spcget	  
		spc_write 
		getc
		vol_up
		flush_done
		vol_down
		sleep
		vol_set
		module_clock
		put_seq
		spc_write
		kernel_enable
		status_clear
		clr_gpio
		set_gpio


	The PH files use the following system services and/or 
	system library calls.

		create_process
		read_pipe
		write_pipe
		default_lang 
		printf
		logitem	     
		dologpho     
		save_index   
		adjust_index 
		set_index    
		spcget	  
		spc_write 

	The LTS files use the following system services and/or 
	system library calls.

		siganl_semaphore
		wait_semaphore
		write_pipe
		read_pipe
		default_lang 
		printf
		create_process


