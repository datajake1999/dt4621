/*
 ***********************************************************************
 *
 *                           Copyright ©
 *	  Copyright © 2000-2001 Force Computers Inc., a Solectron company. All rights reserved.
 *    © Digital Equipment Corporation 1995. All rights reserved.
 *
 *    Restricted Rights: Use, duplication, or disclosure by the U.S.
 *    Government is subject to restrictions as set forth in subparagraph
 *    (c) (1) (ii) of DFARS 252.227-7013, or in FAR 52.227-19, or in FAR
 *    52.227-14 Alt. III, as applicable.
 *
 *    This software is proprietary to and embodies the confidential
 *    technology of Force Computers Incorporated and other parties.
 *    Possession, use, or copying of this software and media is authorized
 *    only pursuant to a valid written license from Force or an
 *    authorized sublicensor.
 *
 ***********************************************************************
 *    File Name:	uk_phon.tab
 *    Author:		Doug Robinson/Ginger Lin
 *    Creation Date: 
 *
 *    Functionality:
 *    phonemic character set conversions ... included into uk_main.c 
 *
 ***********************************************************************
 *    Revision History:
 * 
 * 001  EAB	03/24/1997	Unified phonemic codes df, BATS # 302.
 * 002	DR	09/25/1997	Copied from USA_phon.tab.  Modeified for the uk phonemes...
 * 003  GL	10/01/1997	use PUK instead of PUSA.
 * 004	MGS	04/13/2000	Changes for integrated phoneme set 
 * 005	CAB	01/19/2001	Fixed copyright info
 */


unsigned char	uk_ascky[] =	{

/* allophones */

	'_',	'i',	'I',	'e',	'E',	'@',	'a',	'A',	'W',	'^',
	'c',	'o',	'O',	'U',	'u',	'R',	'Y',	'x',	'|',	'F',
	'K',	'P',	'M',	'j',	'w',	'y',	'r',	'l',	'h',	'B',
	'X',	'm',	'n',	'G',	'L',	'H', 	'N',	'f',	'v',	'T',
	'D',	's',	'z',	'S',	'Z',	'p',	'b',	't',	'd',	'k',
	'g',	'V',	'Q',	'q',	'C',	'J',	0,

/* place holders for null range */

		0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,	0,	0,	0,	0,
	0,	0,	0,	0,

/* control phones */

	'~',	'=',	'`',	'\'',	'"',	'/',	'\\',	'<',	
	'-', 	'*',	'#',	' ',	'(',	')', 	';',	',',
	'.',	'?',	'!',	'+' ,	'^',	'&',	'>'
};


unsigned int uk_ascky_rev[] = {

	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,		PUK(WBOUND),	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,

	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY,		NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,

	PUK(WBOUND),	PUK(EXCLAIM),	PUK(SEMPH),		PUK(HYPHEN),
	NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,		PUK(S1),
	PUK(PPSTART),	PUK(VPSTART),	PUK(MBOUND),	PUK(NEW_PARAGRAPH),
	PUK(COMMA),		PUK(SBOUND),	PUK(PERIOD),	PUK(HAT_RISE),

	NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY, 	NULL_ASCKY,
	NULL_ASCKY, 	NULL_ASCKY, 	PITCH_CHANGE,	PUK(RELSTART),
	PUK(HAT_RF),	PUK(S3),		NULL_ASCKY, 	PUK(QUEST),

	PUK(UK_AE),		PUK(UK_AY),		PUK(UK_OH),		PUK(UK_CH),
	PUK(UK_DH),		PUK(UK_EH),		PUK(UK_IR),		PUK(UK_NX),
	PUK(UK_DZ),		PUK(UK_IH),		PUK(UK_JH),		PUK(UK_ER),
	PUK(UK_EL),		PUK(UK_OR),		PUK(UK_EN),		PUK(UK_OY),

	PUK(UK_AR),   	PUK(UK_TX),		PUK(UK_RR),		PUK(UK_SH),	
	PUK(UK_TH),		PUK(UK_UH),		PUK(UK_YR),  	PUK(UK_AW),
	PUK(UK_LX),   	PUK(UK_YU),		PUK(UK_ZH),		NULL_ASCKY,
	PUK(S1),		NULL_ASCKY, 	PUK(UK_AH),		PUK(SIL),
	
	PUK(S2),		PUK(UK_AA),		PUK(UK_B),			PUK(UK_AO),
	PUK(UK_D),		PUK(UK_EY),		PUK(UK_F),			PUK(UK_G),
	PUK(UK_HX),		PUK(UK_IY),		PUK(UK_UR),   		PUK(UK_K),
	PUK(UK_LL),		PUK(UK_M),		PUK(UK_N),			PUK(UK_OW),
	
	PUK(UK_P),		PUK(UK_Q),		PUK(UK_R),			PUK(UK_S),
	PUK(UK_T),		PUK(UK_UW),		PUK(UK_V),			PUK(UK_W),
	PUK(UK_AX),		PUK(UK_Y),		PUK(UK_Z),			NULL_ASCKY,
	PUK(UK_IX),		NULL_ASCKY, 	PUK(BLOCK_RULES),	NULL_ASCKY
};

/*
 *  string to arpabet conversion ...
 */

unsigned char	uk_arpa[] = {
	'_',	' ',
	'i',	'y',
	'i',	'h',
	'e',	'y',
	'e',	'h',
	'a',	'e',
	'a',	'a',
	'a',	'y',
	'a',	'w',
	'a',	'h',
	'a',	'o',
	'o',	'w',
	'o',	'y',
	'u',	'h',
	'u',	'w',
	'r',	'r',
	'y',	'u',
	'a',	'x',
	'i',	'x',
	'i',	'r',
	'e',	'r',
	'a',	'r',
	'o',	'r',
	'u',	'r',
	'w',	' ',
	'y',	' ',
	'r',	' ',
	'l',	' ',
	'h',	'x',
	'o',	'h',
	'l',	'x',
	'm',	' ',
	'n',	' ',
	'n',	'x',
	'e',	'l',
	'd',	'z',			/* Dentalized "d".	*/
	'e',	'n',
	'f',	' ',
	'v',	' ',
	't',	'h',
	'd',	'h',
	's',	' ',
	'z',	' ',
	's',	'h',
	'z',	'h',
	'p',	' ',
	'b',	' ',
	't',	' ',
	'd',	' ',
	'k',	' ',
	'g',	' ',
	'y',	'r',
	't',	'x',
	'q',	' ',
	'c',	'h',
	'j',	'h',
	'd',	'f',
/* place holders for null range */

	0,	0,	       /* 57  = */
	0,	0,	       /* 58  = */
	0,	0,	       /* 59  = */

	0,	0,	       /* 60  = */
	0,	0,	       /* 61  = */
	0,	0,	       /* 62  = */
	0,	0,	       /* 63  = */
	0,	0,	       /* 64  = */
	0,	0,	       /* 65  = */
	0,	0,	       /* 66  = */
	0,	0,	       /* 67  = */
	0,	0,	       /* 68  = */
	0,	0,	       /* 69  = */

	0,	0,	       /* 70  = */
	0,	0,	       /* 71  = */
	0,	0,	       /* 72  = */
	0,	0,	       /* 73  = */
	0,	0,	       /* 74  = */
	0,	0,	       /* 75  = */
	0,	0,	       /* 76  = */
	0,	0,	       /* 77  = */
	0,	0,	       /* 78  = */
	0,	0,	       /* 79  = */

	0,	0,	       /* 80  = */
	0,	0,	       /* 81  = */
	0,	0,	       /* 82  = */
	0,	0,	       /* 83  = */
	0,	0,	       /* 84  = */
	0,	0,	       /* 85  = */
	0,	0,	       /* 86  = */
	0,	0,	       /* 87  = */
	0,	0,	       /* 88  = */
	0,	0,	       /* 89  = */

	0,	0,	       /* 90  = */
	0,	0,	       /* 91  = */
	0,	0,	       /* 92  = */
	0,	0,	       /* 93  = */
	0,	0,	       /* 94  = */
	0,	0,   	   /* 95  = */
	0,	0,	       /* 96  = */
	0,	0,	       /* 97  = */
	0,	0,	       /* 98  = */
	0,	0,	       /* 99  = */


	'~',	' ',	/* BLOCK_RULES =	~	*/
	'=',	' ',	/* S3 =  			=	*/
	'`',	' ',	/* S2 = 			` 	*/
	'\'',	' ',	/* S1 =				' 	*/
	'\"',	' ',	/* SEMPH =			"   */
	'/',	' ',	/* HAT_RISE  = 		/	*/
	'\\',	' ',	/* HAT_FALL  = 		\	*/
	'/',	'\\',	/* HAT_RF  = 		<	*/
	'-',	' ',	/* SBOUND  =		-	*/
	'*',	' ',	/* MBOUND  = 		*	*/
	'#',	' ',	/* HYPHEN  = 		#	*/
	' ',	' ',	/* WBOUND  = 	 		*/
	'(',	' ',	/* PPSTART =		(	*/
	')',	' ',	/* VPSTART = 		)	*/
	';',	' ',	/* RELSTART  = 		;	*/
	',',	' ',	/* COMMA  =			,	*/
	'.',	' ',	/* PERIOD =			.	*/
	'?',	' ',	/* QUEST  =			?	*/
	'!',	' ',	/* EXCLAIM  = 		!	*/
	'+',	' ',	/* NEW_PARAGRAPH =	+	*/
	'^',	' ',	/* SPECIALWORD =	^	*/
	'&',	' ',	/* LINKRWORD =		&	*/
	'>',	' '		/* DOUBLCONS =		>	*/
};
