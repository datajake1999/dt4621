.\"
.\" @DEC_COPYRIGHT@
.\"
.\"
.\" HISTORY
.\" Revision 1.1.2.3  1996/02/15  22:52:33  Krishna_Mangipudi
.\" 	Added Synopsis
.\" 	[1996/02/15  22:34:06  Krishna_Mangipudi]
.\"
.\" Revision 1.1.2.2  1996/02/15  20:11:14  Krishna_Mangipudi
.\" 	Moved to man3
.\" 	[1996/02/15  20:05:15  Krishna_Mangipudi]
.\"
.\" $EndLog$
.\"
.TH "TextToSpeechGetStatus" 3dtk "" "" "" "DECtalk" ""
.SH Name
.PP
\fBTextToSpeechGetStatus\fP \-
Returns the status of one or more
text-to-speech system parameters.
.SH Syntax
.EX
MMRESULT \fBTextToSpeechGetStatus\fP (LPTTS_HANDLE_T \fIphTTS\fP,
                               LPDWORD \fIdwIdentifier[ ]\fP,
                               LPDWORD \fIdwStatus[ ]\fP,
                               DWORD \fIdwNumberOfStatusValues\fP)
.EE
.SH Parameters
.IP "LPTTS_HANDLE_T \fIphTTS\fP" 20
Specifies an opened text-to-speech handle.
.IP "LPDWORD \fIdwIdentifier[ ]\fP" 20
Specifies an array of values of type DWORD
that specify TTS parameters for which status values
are to be returned in the dwStatus[] array. These values
can be any of the constants defined in include file ttsapi.h:
.PP
.TS
tab(@);
lfR lw(4i)fR .
.sp 4p
Constant@Description
.sp 6p
INPUT_CHARACTER_COUNT
@T{
Returns a count of characters
that the text-to-speech system is currently processing.
T}
.sp
STATUS_SPEAKING
@T{
The status value is TRUE if audio
samples are playing and FALSE if no audio sample is playing.
T}
.sp
WAVE_OUT_DEVICE_ID
@T{
The current wave output device ID is
returned.
T}
.sp
.TE
.PP
.IP "LPDWORD \fIdwStatus[ ]\fP" 20
Specifies an array of type DWORD that is to
return status values corresponding to each of
the identifiers in the dwIdentifier[] array.
.IP "DWORD \fIdwNumberOfStatusValues\fP" 20
Specifies the number of entries to return.
.SH Description
.PP
This function returns the status of one or more text-to-speech system
parameters.
.PP
The STATUS_SPEAKING status identifier has no meaning if the
application is sending speech to a wave file or sending speech to memory.
.SH Return Values
.PP
This function returns a value of type MMRESULT. The value is zero
if the function is successful. The return value is one of the
following constants:
.PP
.TS
tab(@);
lfR lw(4i)fR .
.sp 4p
Constant@Description
.sp 6p
MMSYSERR_NOERROR
@T{
Normal successful completion (zero).
T}
.sp
MMSYSERR_INVALPARAM
@T{
An invalid parameter was passed.
T}
.sp
MMSYSERR_ERROR 
@T{
Error obtaining status values.
T}
.sp
MMSYSERR_INVALHANDLE
@T{
The text-to-speech handle was invalid.
T}
.sp
.TE
.PP
