.\"
.\" @DEC_COPYRIGHT@
.\"
.\"
.\" HISTORY
.\" Revision 1.1.2.3  1996/02/15  22:52:36  Krishna_Mangipudi
.\" 	Added Synopsis
.\" 	[1996/02/15  22:34:10  Krishna_Mangipudi]
.\"
.\" Revision 1.1.2.2  1996/02/15  20:11:20  Krishna_Mangipudi
.\" 	Moved to man3
.\" 	[1996/02/15  20:05:22  Krishna_Mangipudi]
.\"
.\" $EndLog$
.\"
.TH "TextToSpeechOpenInMemory" 3dtk "" "" "" "DECtalk" ""
.SH Name
.PP
\fBTextToSpeechOpenInMemory\fP \-
Initiates speech-to-memory mode, allowing
speech to be stored in memory buffers supplied by the application.
.SH Syntax
.EX
MMRESULT \fBTextToSpeechOpenInMemory\fP (LPTTS_HANDLE_T \fIphTTS\fP,
                                  DWORD \fIdwFormat\fP)
.EE
.SH Parameters
.IP "LPTTS_HANDLE_T \fIphTTS\fP" 20
Specifies an opened text-to-speech handle.
.IP "DWORD \fIdwFormat\fP" 20
Specifies an identifier that
determines the audio sample format. It is one of the following
constants defined in the include files mmsystem.h and ttsapi.h:
.PP
.TS
tab(@);
lfR lw(4i)fR .
.sp 4p
Constant@Description
.sp 6p
WAVE_FORMAT_1M08
@T{
Mono, 8-bit 11.025 kHz sample rate
T}
.sp
WAVE_FORMAT_1M16
@T{
Mono, 16-bit 11.025 kHz sample rate
T}
.sp
WAVE_FORMAT_08M08
@T{
Mono, 8-bit mu-law 8 kHz sample rate
T}
.sp
.TE
.PP
.SH Description
.PP
This function causes the text-to-speech system to enter the speech-to-memory
mode, in which speech samples are written into memory buffers rather than
sent to an audio device each time TextToSpeechSpeak() is called.
TextToSpeechAddBuffer() supplies the text-to-speech system with the memory
buffers it needs.  The text-to-speech system remains in speech-to-memory
mode until TextToSpeechCloseInMemory() is called.
.PP
The memory buffer is passed using the structure TTS_BUFFER_T. The user
must allocate the structure and its associated elements (memory buffer,
phoneme array, and index mark array).  Refer to the DECtalk Software
Programmer's Guide, Speech-To-Memory Mode section for more information on
the TTS_BUFFER_T structure and its elements.
.PP
The text-to-speech system returns the buffer to the application when the
memory buffer, phoneme array, or index mark array is full or when a
TTS_FORCE was used in a TextToSpeechSpeak() call.  Refer to the DECtalk
Software Progammer's Guide, Callback Routines and Window Procedures section
for details on passing information back to the calling application.
.PP
The startup function must be called to start the text-to-speech system
before calling TextToSpeechOpenInMemory().
.PP
TextToSpeechOpenInMemory() automatically resumes audio ouput if the
text-to-speech system is in a paused state due to a previous
TextToSpeechPause() call.
.SH Return Values
.PP
This function returns a value of type MMRESULT. The value is zero
if the function is successful. The return value is one of the
following constants:
.PP
.TS
tab(@);
lfR lw(4i)fR .
.sp 4p
Constant@Description
.sp 6p
MMSYSERR_NOERROR
@T{
Normal successful completion (zero).
T}
.sp
MMSYSERR_INVALPARAM
@T{
An invalid parameter or illegal wave output format was passed.
T}
.sp
MMSYSERR_NOMEM
@T{
Unable to allocate memory.
T}
.sp
MMSYSERR_ERROR
@T{
Illegal output state.
T}
.sp
MMSYSERR_INVALHANDLE
@T{
The text-to-speech handle was invalid.
T}
.sp
.TE
.PP
.SH See Also
.PP
Callback Routines and Window Procedures (DECtalk Software Programmer's
Guide)
.PP
Speech-to-Memory Mode (DECtalk Software Programmer's Guide)
.PP
\fITextToSpeechAddBuffer\fP(3dtk),
\fITextToSpeechCloseInMemory\fP(3dtk),
\fITextToSpeechPause\fP(3dtk),
\fITextToSpeechReset\fP(3dtk),
\fITextToSpeechReturnBuffer\fP(3dtk),
\fITextToSpeechSpeak\fP(3dtk),
\fITextToSpeechStartup\fP(3dtk),
\fITextToSpeechStartupEx\fP(3dtk)

