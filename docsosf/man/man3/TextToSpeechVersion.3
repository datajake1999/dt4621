.TH "TextToSpeechVersion" 3dtk "" "" "" "DECtalk" ""
.SH Name
.PP
\fBTextToSpeechVersion\fP \-
Requests version information from DECtalk Software, allowing an
application to test for DECtalk Software API (DAPI) version compatibility.
.SH Syntax
.EX
DWORD \fBTextToSpeechVersion\fP (LPSTR \fI*VersionStr\fP)
.EE
.SH Parameters
.IP "LPSTR \fI*VersionStr\fP" 20
Returns the address of a pointer to an array of characters containing text information, or NULL for no text information.
.SH Description
.PP
This function requests version information from DECtalk that allows the
calling application to test for DAPI version compatibility.  The function
returns a numerically encoded version number and additionally
may return a pointer to a text buffer in the VersionStr parameter.
.SH Return Values
.PP
This function returns a value of type DWORD that is encoded with both the
DAPI build version and the DECtalk Software version.  The encoding is as
follows:
.PP
.TS
tab(@);
lfR lw(4i)fR .
.sp 4p
Version@Bits Used
.sp 6p
DECtalk Major Version
@T{
Bits 31-24
T}
.sp
DECtalk Minor Version
@T{
Bits 23-16
T}
.sp
DAPI Major Version
@T{
Bits 15-8
T}
.sp
DAPI Minor Version
@T{
Bits 7-0
T}
.sp
.TE
.PP
If the DAPI Major Version is not the same as the DAPI Major Version the
DECtalk application was compiled with, the DAPI is no longer compatible and
the application may crash during further calls into the DAPI.
.PP
If the DAPI Minor Version is lower than the version of the DAPI the DECtalk
application was compiled with, some features that are expected may not be
present or functional in the DAPI.
.PP
For safety, your applications should perform the following check:
.EX
if (DAPI_Major_Version != Build_Major_Version) Error();
if (DAPI_Minor_Version < Build_Minor_Version) Error();
success();
.EE
.PP
This allows your application to avoid the majority of incompatability bugs
that could arise from DECtalk version mismatching.
