.\"
.\" @DEC_COPYRIGHT@
.\"
.\"
.\" HISTORY
.\" Revision 1.1.2.3  1996/02/15  22:52:43  Krishna_Mangipudi
.\" 	Added Synopsis
.\" 	[1996/02/15  22:34:24  Krishna_Mangipudi]
.\"
.\" Revision 1.1.2.2  1996/02/15  20:11:38  Krishna_Mangipudi
.\" 	Moved to man3
.\" 	[1996/02/15  20:05:44  Krishna_Mangipudi]
.\"
.\" $EndLog$
.\"
.TH "TextToSpeechReturnBuffer" 3dtk "" "" "" "DECtalk" ""
.SH Name
.PP
\fBTextToSpeechReturnBuffer\fP \-
Returns the current in-memory speech buffer.
.SH Syntax
.EX
MMRESULT \fBTextToSpeechReturnBuffer\fP (LPTTS_HANDLE_T \fIphTTS\fP,
                                  LPTTS_BUFFER_T \fI*ppTTSBuffer\fP)
.EE
.SH Parameters
.IP "LPTTS_HANDLE_T \fIphTTS\fP" 20
Specifies an opened text-to-speech handle.
.IP "LPTTS_BUFFER_T \fI*ppTTSBuffer\fP" 20
Specifies a pointer to a pointer to a structure containing the memory buffers.
Buffers were previously supplied by the application to be used while in
speech-to-memory mode.
.SH Description
.PP
This function returns the current buffer when an application is using the
speech-to-memory capability. The buffer can be empty
or partially full when it is returned. The dwBufferLength element of the
TTS_BUFFER_T structure contains the number of samples in the buffer. If no
buffer is available, a NULL pointer is returned in
\fIppTTSBuffer\fP.
.PP
Most applications do not require this function, because buffers
are automatically returned when filled or when a TTS_FORCE flag
is passed in the TextToSpeechSpeak() function. The
TextToSpeechReturnBuffer() function is provided so that an application can
return a buffer before it is filled and, therefore, obtain more
speech samples immediately.  See the DECtalk Software Programmer's Guide
for more information on the TTS_BUFFER_T structure.
.PP
TextToSpeechAddBuffer() must be called before calling
TextToSpeechReturnBuffer().
.SH Return Values
.PP
This function returns a value of type MMRESULT. The value is zero
if the function successful. The return value is one of the
following constants:
.PP
.TS
tab(@);
lfR lw(4i)fR .
.sp 4p
Constant@Description
.sp 6p
MMSYSERR_NOERROR
@T{
Normal successful completion (zero).
T}
.sp
MMSYSERR_INVALPARAM
@T{
An invalid parameter was passed.
T}
.sp
MMSYSERR_ERROR
@T{
Output to memory not enabled or unable
to create a system object.
T}
.sp
MMSYSERR_INVALHANDLE
@T{
The text-to-speech handle was invalid.
T}
.sp
.TE
.PP
.SH See Also
.PP
\fITextToSpeechAddBuffer\fP(3dtk)
